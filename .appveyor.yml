version: 1.0.{build}

image:
- Visual Studio 2017

test: off

build:
  parallel: true

platform:
- x64

environment:
  global:
    PYTHON: "C:\\conda"
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci-helpers\\appveyor\\windows_sdk.cmd"

  matrix:
    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
    - PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
    - PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
    - PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

install:
  - if "%PYTHON_VERSION%" == "3.5" set "BASE_PYTHON_VERSION=35"
  - if "%PYTHON_VERSION%" == "3.6" set "BASE_PYTHON_VERSION=3"
  - if "%PYTHON_ARCH%" == "64" set "ARCH_LABEL=-x64"
  - if "%PYTHON_ARCH%" == "64" set "CMAKE_ARCH=x%PYTHON_ARCH%"
  - set "CONDA_ROOT=C:\Miniconda%BASE_PYTHON_VERSION%%ARCH_LABEL%"
  - set "PATH=%CONDA_ROOT%;%CONDA_ROOT%\Scripts;%CONDA_ROOT%\Library\bin;%PATH%"
  - set PATH
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - conda config --set always_yes yes
  # Use the latest conda
  - conda install -n root conda conda-build --no-pin
  # activate with newer conda, may set different variables
  - "%CONDA_ROOT%\\Scripts\\activate root"
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - conda info -a
  - conda create -q -n test-env python=%PYTHON_VERSION% anaconda anaconda-client
  - "%CONDA_ROOT%\\Scripts\\activate test-env"
  - conda config --set anaconda_upload yes

build_script:
  #- python setup.py install
  #- python -c "import pyctest; import pyctest.pyctest; import pyctest.pycmake"
  - python update-conda-yaml.py
  - conda-build --user jrmadsen --token "%ANACONDA_TOKEN%" .
