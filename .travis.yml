# pyctest Travis CI file

language: python


cache:
  directories:
  - "$HOME/.cache/pip"
  - "$HOME/.pyenv"


# The apt packages here install our compiled code dependencies.
matrix:
  include:
    # ------------------------------------------------------------------------ #
    #
    #   Python 2.7
    #
    # ------------------------------------------------------------------------ #
    # GCC 4.9
    - os: linux
      dist: trusty
      sudo: false
      python: '2.7'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
            - build-essential
            - cmake
      env:
        - MATRIX_EVAL="CC=$(which gcc-4.9) && CXX=$(which g++-4.9) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # macOS
    - os: osx
      osx_image: xcode9.4
      python: '2.7'
      env:
        - MATRIX_EVAL="CC=$(which clang) && CXX=$(which clang++) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # GCC 5
    - os: linux
      dist: trusty
      sudo: false
      python: '2.7'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
            - build-essential
            - cmake
      env:
        - MATRIX_EVAL="CC=$(which gcc-5) && CXX=$(which g++-5) && BUILD_TYPE=MinSizeRel && CONDA_UPLOAD=0"
    # ------------------------------------------------------------------------ #
    #
    #   Python 3.5
    #
    # ------------------------------------------------------------------------ #
    # GCC 4.9
    - os: linux
      dist: trusty
      sudo: false
      python: '3.5'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
            - build-essential
            - cmake3
      env:
        - MATRIX_EVAL="CC=$(which gcc-4.9) && CXX=$(which g++-4.9) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # macOS
    - os: osx
      osx_image: xcode9.4
      python: '3.5'
      env:
        - MATRIX_EVAL="CC=$(which clang) && CXX=$(which clang++) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # GCC 6
    - os: linux
      dist: trusty
      sudo: false
      python: '3.5'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - build-essential
            - cmake3
      env:
        - MATRIX_EVAL="CC=$(which gcc-6) && CXX=$(which g++-6) && BUILD_TYPE=Debug && CONDA_UPLOAD=0"
    # ------------------------------------------------------------------------ #
    #
    #   Python 3.6
    #
    # ------------------------------------------------------------------------ #
    # GCC 4.9
    - os: linux
      dist: trusty
      sudo: false
      python: '3.6'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
            - build-essential
            - cmake
      env:
        - MATRIX_EVAL="CC=$(which gcc-4.9) && CXX=$(which g++-4.9) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # macOS
    - os: osx
      osx_image: xcode9.4
      python: '3.6'
      env:
        - MATRIX_EVAL="CC=$(which clang) && CXX=$(which clang++) && BUILD_TYPE=RelWithDebInfo && CONDA_UPLOAD=1"
    # GCC 7
    - os: linux
      dist: trusty
      sudo: false
      python: '3.6'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - build-essential
            - cmake
      env:
        - MATRIX_EVAL="CC=$(which gcc-7) && CXX=$(which g++-7) && BUILD_TYPE=MinSizeRel && CONDA_UPLOAD=0"
    # ------------------------------------------------------------------------ #


before_install:
    - eval "${MATRIX_EVAL}"
    - export CC=${CC}
    - export CXX=${CXX}
    - export PYTHON_VERSION="$(python --version | awk '{print $NF}')"
    - export PYCTEST_BUILD_TYPE=${BUILD_TYPE}
    - echo "CC = ${CC} $(${CC} -dumpversion)"
    - echo "CXX = ${CXX} $(${CXX} -dumpversion)"

install:
    - export CPY_MAJOR=$(echo "${TRAVIS_PYTHON_VERSION}" | sed 's/\./ /g' | awk '{print $1}')
    - wget https://repo.continuum.io/miniconda/Miniconda${CPY_MAJOR}-latest-Linux-x86_64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    - conda create -q -n test-env python=${TRAVIS_PYTHON_VERSION}
        anaconda anaconda-client conda-build
    - source activate test-env
    - python setup.py install
    - rm -rf build pyctest.egg-info .eggs dist
    - if [[ "${CONDA_UPLOAD}" -gt 0 ]]; then
          conda config --set anaconda_upload yes ;
          python update-conda-yaml.py ;
          conda-build --user jrmadsen --token ${ANACONDA_TOKEN} . ;
      fi

script:
    #
    # Python testing
    #
    - mkdir -p ${HOME}/pyctest-test
    # go to empty directory for testing
    - cd ${HOME}/pyctest-test
    - python${TRAVIS_PYTHON_VERSION} -c "import pyctest; import pyctest.pyctest; import pyctest.pycmake"
